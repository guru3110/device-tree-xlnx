From d59c59cf65bccc952515429aa2d713b212b60a84 Mon Sep 17 00:00:00 2001
From: Venkatesh Yadav Abbarapu <venkatesh.abbarapu@xilinx.com>
Date: Mon, 3 Dec 2018 10:12:44 +0530
Subject: [DEVICE-TREE-XLNX PATCH 1/6] hdmi: Update the hdmi tx/rx nodes

Adding support for pipeline HDMI RX to FB WR and HDMi TX to
FB RD.

Signed-off-by: Venkatesh Yadav Abbarapu <venkatesh.abbarapu@xilinx.com>
---
 hdmi_rx_ss/data/hdmi_rx_ss.tcl | 39 ++++++++++++++++++++++++++++++++++++---
 hdmi_tx_ss/data/hdmi_tx_ss.tcl | 37 ++++++++++++++++++++++++++++++++++++-
 2 files changed, 72 insertions(+), 4 deletions(-)

diff --git a/hdmi_rx_ss/data/hdmi_rx_ss.tcl b/hdmi_rx_ss/data/hdmi_rx_ss.tcl
index ee97497..49651a0 100644
--- a/hdmi_rx_ss/data/hdmi_rx_ss.tcl
+++ b/hdmi_rx_ss/data/hdmi_rx_ss.tcl
@@ -25,7 +25,7 @@ proc generate {drv_handle} {
 		return
 	}
 	set compatible [get_comp_str $drv_handle]
-	set compatible [append compatible " " "xlnx,v-hdmi-rx-ss-3.0"]
+	set compatible [append compatible " " "xlnx,v-hdmi-rx-ss-3.1"]
 	set_drv_prop $drv_handle compatible "$compatible" stringlist
 	set connected_ip [hsi::utils::get_connected_stream_ip [get_cells -hier $drv_handle] "VIDEO_OUT"]
 	if {[llength $connected_ip] != 0} {
@@ -82,6 +82,33 @@ proc generate {drv_handle} {
 			set vcap_audio_hdmi_in_node [add_or_get_dt_node -n "endpoint" -l vcap_hdmi_in -p $vcap_audio_hdmiport_node]
 			hsi::utils::add_new_dts_param "$vcap_audio_hdmi_in_node" "remote-endpoint" hdmi_rx_out reference
 		}
+		if {[string match -nocase $connected_ip_type "axis_register_slice"]} {
+			set axis_reg_slice_ip [hsi::utils::get_connected_stream_ip $connected_ip "M_AXIS"]
+			set axis_reg_slice_connected_out_ip_type [get_property IP_NAME $axis_reg_slice_ip]
+			if {[string match -nocase $axis_reg_slice_connected_out_ip_type "v_frmbuf_wr"]} {
+				set ports_node [add_or_get_dt_node -n "ports" -l hdmirx_ports -p $node]
+				hsi::utils::add_new_dts_param "$ports_node" "#address-cells" 1 int
+				hsi::utils::add_new_dts_param "$ports_node" "#size-cells" 0 int
+				set port_node [add_or_get_dt_node -n "port" -l hdmirx_port -u 0 -p $ports_node]
+				hsi::utils::add_new_dts_param "$port_node" "reg" 0 int
+				set hdmi_rx_node [add_or_get_dt_node -n "endpoint" -l hdmi_rx_out -p $port_node]
+				hsi::utils::add_new_dts_param "$hdmi_rx_node" "remote-endpoint" vcap_hdmi_in reference
+				set dts_file [current_dt_tree]
+				set bus_node "amba_pl"
+				set vcap_hdmirx [add_or_get_dt_node -n "vcap_hdmi" -d $dts_file -p $bus_node]
+				hsi::utils::add_new_dts_param $vcap_hdmirx "compatible" "xlnx,video" string
+				hsi::utils::add_new_dts_param $vcap_hdmirx "dmas" "$axis_reg_slice_ip 0" reference
+				hsi::utils::add_new_dts_param $vcap_hdmirx "dma-names" "port0" string
+				set vcap_audio_hdmi_node [add_or_get_dt_node -n "ports" -l vcap_hdmi_ports -p $vcap_hdmirx]
+				hsi::utils::add_new_dts_param "$vcap_audio_hdmi_node" "#address-cells" 1 int
+				hsi::utils::add_new_dts_param "$vcap_audio_hdmi_node" "#size-cells" 0 int
+				set vcap_audio_hdmiport_node [add_or_get_dt_node -n "port" -l vcap_hdmi_port -u 0 -p $vcap_audio_hdmi_node]
+				hsi::utils::add_new_dts_param "$vcap_audio_hdmiport_node" "reg" 0 int
+				hsi::utils::add_new_dts_param "$vcap_audio_hdmiport_node" "direction" input string
+				set vcap_audio_hdmi_in_node [add_or_get_dt_node -n "endpoint" -l vcap_hdmi_in -p $vcap_audio_hdmiport_node]
+				hsi::utils::add_new_dts_param "$vcap_audio_hdmi_in_node" "remote-endpoint" hdmi_rx_out reference
+			}
+		}
 	}
 	set phy_names ""
 	set phys ""
@@ -106,14 +133,20 @@ proc generate {drv_handle} {
 	if {![string match -nocase $phys ""]} {
 		hsi::utils::add_new_dts_param "$node" "phys" $phys reference
 	}
-	hsi::utils::add_new_dts_param "$node" "phy-names" $phy_names stringlist
-	hsi::utils::add_new_dts_param "$node" "phys" $phys reference
 	set input_pixels_per_clock [get_property CONFIG.C_INPUT_PIXELS_PER_CLOCK [get_cells -hier $drv_handle]]
 	hsi::utils::add_new_dts_param "${node}" "xlnx,input-pixels-per-clock" $input_pixels_per_clock int
 	set max_bits_per_component [get_property CONFIG.C_MAX_BITS_PER_COMPONENT [get_cells -hier $drv_handle]]
 	hsi::utils::add_new_dts_param "${node}" "xlnx,max-bits-per-component" $max_bits_per_component int
 	set edid_ram_size [get_property CONFIG.C_EDID_RAM_SIZE [get_cells -hier $drv_handle]]
 	hsi::utils::add_new_dts_param "${node}" "xlnx,edid-ram-size" $edid_ram_size hexint
+	set include_hdcp_1_4 [get_property CONFIG.C_INCLUDE_HDCP_1_4 [get_cells -hier $drv_handle]]
+	if {[string match -nocase $include_hdcp_1_4 "true"]} {
+		hsi::utils::add_new_dts_param "${node}" "xlnx,include-hdcp-1-4" "" boolean
+	}
+	set include_hdcp_2_2 [get_property CONFIG.C_INCLUDE_HDCP_2_2 [get_cells -hier $drv_handle]]
+	if {[string match -nocase $include_hdcp_2_2 "true"]} {
+		hsi::utils::add_new_dts_param "${node}" "xlnx,include-hdcp-2-2" "" boolean
+	}
 	set audio_out_connect_ip [hsi::utils::get_connected_stream_ip [get_cells -hier $drv_handle] "AUDIO_OUT"]
 	if {[llength $audio_out_connect_ip] != 0} {
 		set audio_out_connect_ip_type [get_property IP_NAME $audio_out_connect_ip]
diff --git a/hdmi_tx_ss/data/hdmi_tx_ss.tcl b/hdmi_tx_ss/data/hdmi_tx_ss.tcl
index b543188..7c40b76 100644
--- a/hdmi_tx_ss/data/hdmi_tx_ss.tcl
+++ b/hdmi_tx_ss/data/hdmi_tx_ss.tcl
@@ -25,7 +25,7 @@ proc generate {drv_handle} {
 		return
 	}
 	set compatible [get_comp_str $drv_handle]
-	set compatible [append compatible " " "xlnx,v-hdmi-tx-ss-3.0"]
+	set compatible [append compatible " " "xlnx,v-hdmi-tx-ss-3.1"]
 	set_drv_prop $drv_handle compatible "$compatible" stringlist
 	set ip [get_cells -hier $drv_handle]
 	set pins [get_pins -of_objects [get_nets -of_objects [get_pins -of_objects $ip "acr_n"]]]
@@ -67,6 +67,33 @@ proc generate {drv_handle} {
 			set pl_disp_crtc_node [add_or_get_dt_node -n "endpoint" -l pl_disp_crtc -p $pl_display_port_node]
 			hsi::utils::add_new_dts_param "$pl_disp_crtc_node" "remote-endpoint" hdmi_encoder reference
 		}
+		if {[string match -nocase $connected_ip_type "axis_register_slice"]} {
+			set axis_reg_slice_ip [hsi::utils::get_connected_stream_ip $connected_ip "S_AXIS"]
+			set axis_reg_slice_connected_out_ip_type [get_property IP_NAME $axis_reg_slice_ip]
+			if {[string match -nocase $axis_reg_slice_connected_out_ip_type "v_frmbuf_rd"]} {
+				set ports_node [add_or_get_dt_node -n "ports" -l hdmitx_ports -p $node]
+				hsi::utils::add_new_dts_param "$ports_node" "#address-cells" 1 int
+				hsi::utils::add_new_dts_param "$ports_node" "#size-cells" 0 int
+				set hdmi_port_node [add_or_get_dt_node -n "port" -l encoder_hdmi_port -u 0 -p $ports_node]
+				hsi::utils::add_new_dts_param "$hdmi_port_node" "reg" 0 int
+				set hdmi_encoder_node [add_or_get_dt_node -n "endpoint" -l hdmi_encoder -p $hdmi_port_node]
+				hsi::utils::add_new_dts_param "$hdmi_encoder_node" "remote-endpoint" dmaengine_crtc reference
+				set dts_file [current_dt_tree]
+				set bus_node "amba_pl"
+				set pl_display [add_or_get_dt_node -n "drm-dmaengine-drv" -l "v_drm_dmaengine_drv" -d $dts_file -p $bus_node]
+				hsi::utils::add_new_dts_param "${pl_display}" "/* Fill the fields xlnx,vformat based on user requirement */" "" comment
+				hsi::utils::add_new_dts_param $pl_display "compatible" "xlnx,pl-disp" string
+				hsi::utils::add_new_dts_param $pl_display "dmas" "$axis_reg_slice_ip 0" reference
+				hsi::utils::add_new_dts_param $pl_display "dma-names" "dma0" string
+				hsi::utils::add_new_dts_param $pl_display "xlnx,vformat" "YUYV" string
+				hsi::utils::add_new_dts_param "$pl_display" "#address-cells" 1 int
+				hsi::utils::add_new_dts_param "$pl_display" "#size-cells" 0 int
+				set pl_display_port_node [add_or_get_dt_node -n "port" -l dmaengine_port -u 0 -p $pl_display]
+				hsi::utils::add_new_dts_param "$pl_display_port_node" "reg" 0 int
+				set pl_disp_crtc_node [add_or_get_dt_node -n "endpoint" -l dmaengine_crtc -p $pl_display_port_node]
+				hsi::utils::add_new_dts_param "$pl_disp_crtc_node" "remote-endpoint" hdmi_encoder reference
+			}
+		}
 	}
 	set phy_names ""
 	set phys ""
@@ -91,6 +118,14 @@ proc generate {drv_handle} {
 	if {![string match -nocase $phys ""]} {
 		hsi::utils::add_new_dts_param "$node" "phys" $phys reference
 	}
+	set include_hdcp_1_4 [get_property CONFIG.C_INCLUDE_HDCP_1_4 [get_cells -hier $drv_handle]]
+	if {[string match -nocase $include_hdcp_1_4 "true"]} {
+		hsi::utils::add_new_dts_param "${node}" "xlnx,include-hdcp-1-4" "" boolean
+	}
+	set include_hdcp_2_2 [get_property CONFIG.C_INCLUDE_HDCP_2_2 [get_cells -hier $drv_handle]]
+	if {[string match -nocase $include_hdcp_2_2 "true"]} {
+		hsi::utils::add_new_dts_param "${node}" "xlnx,include-hdcp-2-2" "" boolean
+	}
 	set audio_in_connect_ip [hsi::utils::get_connected_stream_ip [get_cells -hier $drv_handle] "AUDIO_IN"]
 	if {[llength $audio_in_connect_ip] != 0} {
 		set audio_in_connect_ip_type [get_property IP_NAME $audio_in_connect_ip]
-- 
1.8.3.1
